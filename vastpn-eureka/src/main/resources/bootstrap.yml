##########################################
# 微服务基础配置
##########################################
spring:
  application:
    name: vastpn-eureka # 所有服务在注册中心自动转换为大写
  profiles:
    active: dev
  boot:
    admin:
      client:
        metadata:
          user.name: ${security.user.name}
          user.password: ${security.user.password}

##########################################
# undertow 容器配置
##########################################
server:
  undertow:
    #【I/O线程数】CPU 数量;它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心为一个线程.不要设置过大，如果过大，启动项目会报错：打开文件数过多
    io-threads: 2
    #【工作线程数】：CPU 数量*8;阻塞任务线程池, 当执行类似servlet请求阻塞IO操作, undertow会从这个线程池中取得线程.它的值设置取决于系统线程执行任务的阻塞系数，默认值是IO线程数*8
    worker-threads: 16
    #【是否堆之外分配缓冲区】是否分配的直接内存(NIO直接分配的堆外内存)
    direct-buffers: true
    # 【每个缓冲区的大小（以字节为单位）】配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理；每块buffer的空间大小,越小的空间被利用越充分，不要设置太大，以免影响其他应用，合适即可
    buffer-size: 512
    #【Http最大请求数量】
    max-http-post-size: 5000

##########################################
# 注册服务中心安全配置、Actuator 安全端点
# 1、在 “spring-boot-starter-actuator” 依赖项目中，增加 “spring-boot-starter-security”依赖；
# 2、可设置管理端口 ：management.port=
# 3、必须开启才有效：management.security.enabled=true
# 4、配合安全账户使用：
#    security.user.name=
#    security.user.password=
##########################################
management:
  security:
    enabled: true
  health:
    defaults:
      enabled: true
security:
  user:
    name: bu-admin
    password: 123456
  basic:
    enabled: true
endpoints:
  enabled: false
